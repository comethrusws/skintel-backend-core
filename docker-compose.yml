services:
  skintel-backend:
    build:
      context: skintel-backend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://postgres:password@skintel-database:5432/skintel_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANDMARK_URL=http://skintel-facial-landmarks:8000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_PUBLIC_BASE_URL=${S3_PUBLIC_BASE_URL}
      - S3_OBJECT_ACL=${S3_OBJECT_ACL}
    depends_on:
      skintel-database:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  migrate:
    build:
      context: skintel-backend
      dockerfile: Dockerfile.migrate
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://postgres:password@skintel-database:5432/skintel_db
    depends_on:
      skintel-database:
        condition: service_healthy

  skintel-facial-landmarks:
    build:
      context: skintel-facial-landmarks
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    environment:
      - PYTHONPATH=/app
    depends_on:
      skintel-database:
        condition: service_healthy
    restart: unless-stopped

  skintel-database:
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=skintel_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
